name: Web

on:
  push:
    paths-ignore:
      - 'packages/mobile/**/*'
    branches:
      - '*'
  pull_request:
    paths-ignore:
      - 'packages/mobile/**/*'
    branches:
      - 'master'

jobs:
  build-test-deploy:
    runs-on: macos-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    steps:
      - uses: actions/checkout@v2

      - name: Set Node Version to 12
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - uses: microsoft/playwright-github-action@v1

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies and run tests
        run: yarn --frozen-lockfile

      - name: Build & Clean
        working-directory: packages/web/
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: yarn build && rm -rf .cache/

      - uses: EndBug/add-and-commit@v4
        if: "(github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop')"
        with:
          add: 'packages/web/static/gists'
          message: 'chore: [skip ci] adding gists'
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Prepare Screenshots Folder
        working-directory: packages/web/
        run: mkdir -p ./screenshots

      - name: Start Test Webserver in Background
        working-directory: packages/web/
        run: npx serve -s ./public -p 8000 &

      - name: Test
        working-directory: packages/web/
        run: yarn test

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: test-screenshots
          path: ./packages/web/screenshots

      - name: Deploy Test
        if: "(github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop')"
        working-directory: packages/web/
        env:
          HOST: ${{ secrets.HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 700 ~/.ssh/id_rsa
          ssh-keyscan -H "$HOST" >> ~/.ssh/known_hosts
          scp -r ./public/* "$SSH_USER@$HOST://var/www/html/test"

      - name: Deploy Prod
        if: "github.ref == 'refs/heads/master'"
        working-directory: packages/web/
        env:
          HOST: ${{ secrets.HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 700 ~/.ssh/id_rsa
          ssh-keyscan -H "$HOST" >> ~/.ssh/known_hosts
          scp -r ./public/* "$SSH_USER@$HOST://var/www/html/prod"
